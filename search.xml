<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Django创建项目、配置]]></title>
    <url>%2Funcategorized%2FDjango%2F</url>
    <content type="text"><![CDATA[一、框架介绍 Django(Python Web 框架)是一个开放源代码的Web应用框架，由Python写成。采用了MTV的框架模式，即模型M，模板T和视图V。它的主要目的是简便、快速的开发数据库驱动的网站。 二、创建Djiango项目①命令行创建项目1.创建文件夹并切换目录 12mkdir hello_djangocd hello_django 2.创建虚拟环境 1python -m venv hello_django_venv 3.激活虚拟环境 1234cd hello_django_venvcd Scriptsactivatelinux：source bin/activate 4.在虚拟环境下安装Django框架 1pip install django 6.在用户目录下创建项目 1django-admin startproject hello_django 7.创建应用 1python manage.py startapp hrs 8.启动服务 1python manage.py runserver ②Pycharm 创建Django项目1.设置好项目名和应用名后Create创建 三、配置Django项目1.setting.py添加项目应用’cart.apps.CartConfig’ 12345678910111213&gt; # Application definition&gt; #添加cart应用&gt;&gt; INSTALLED_APPS = [&gt; &apos;django.contrib.admin&apos;,&gt; &apos;django.contrib.auth&apos;,&gt; &apos;django.contrib.contenttypes&apos;,&gt; &apos;django.contrib.sessions&apos;,&gt; &apos;django.contrib.messages&apos;,&gt; &apos;django.contrib.staticfiles&apos;,&gt; &apos;cart.apps.CartConfig&apos;,&gt; ]&gt; 2.创建数据库并在setting.py做如下配置： 123456789101112&gt; # Database&gt;&gt; DATABASES = &#123;&gt; &apos;default&apos;: &#123;&gt; &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,&gt; &apos;NAME&apos;: &apos;shop&apos;,&gt; &apos;HOST&apos;:&apos;localhost&apos;,&gt; &apos;PORT&apos;:&apos;3306&apos;,&gt; &apos;USER&apos;:&apos;root&apos;,&gt; &apos;PASSWORD&apos;:&apos;123456&apos;,&gt; &#125;&gt; 项目shop下__init__.py做如下配置： 1234&gt; import pymysql&gt;&gt; pymysql.install_as_MySQLdb()&gt; 3.创建模型：models.py 123456789101112131415&gt; from django.db import models&gt;&gt; class Goods(models.Model):&gt; &apos;&apos;&apos;商品模型类&apos;&apos;&apos;&gt;&gt; id = models.AutoField(primary_key=True,db_column=&apos;gid&apos;)&gt; name = models.CharField(max_length=50,db_column=&apos;gname&apos;)&gt; price = models.DecimalField(max_digits=10,decimal_places=2,db_column=&apos;gprice&apos;)&gt; image = models.CharField(max_length=255,db_column=&apos;gimage&apos;)&gt;&gt; class Meta:&gt; &gt; db_table = &apos;tb_goods&apos;&gt; ordering = (&apos;id&apos;,)&gt; 4.数据迁移(虚拟环境下) 12$ python manage.py makemigrations hrs (生成迁移)$ python manage.py migrate (执行迁移) 5.配置管理员页面(admin.py) 12345678910111213&gt; from django.contrib import admin&gt;&gt; from cart.models import Goods&gt;&gt;&gt; class GoodsAdmin(admin.ModelAdmin):&gt; #添加管理员界面显示列&gt; list_display = (&apos;id&apos;,&apos;name&apos;,&apos;price&apos;,&apos;image&apos;)&gt; #指定搜索列&gt; search_fields = (&apos;name&apos;,)&gt;&gt; admin.site.register(Goods,GoodsAdmin)&gt; 6.创建管理员(虚拟环境) 1$ python manage.py createsuperuser 7.templates/static ​ templates(存放需要渲染的HTML页面) ​ static(存放：images/js/css) static需要在setting.py添加如下设置： 1234&gt; # Static files (CSS, JavaScript, Images)&gt;&gt; STATICFILES_DIRS = [os.path.join(BASE_DIR,&apos;static&apos;)]&gt; 如果使用命令行创建Django项目 还需要在setting.py中添加如下配置: ‘DIRS’: [os.path.join(BASE_DIR, ‘templates’)] 123456789101112131415161718&gt; TEMPLATES = [&gt; &#123;&gt; &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;,&gt; # 添加templates文件夹路径&gt; &apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;)]&gt; ,&gt; &apos;APP_DIRS&apos;: True,&gt; &apos;OPTIONS&apos;: &#123;&gt; &apos;context_processors&apos;: [&gt; &apos;django.template.context_processors.debug&apos;,&gt; &apos;django.template.context_processors.request&apos;,&gt; &apos;django.contrib.auth.context_processors.auth&apos;,&gt; &apos;django.contrib.messages.context_processors.messages&apos;,&gt; ],&gt; &#125;,&gt; &#125;,&gt; ]&gt; 8.还可根据需要做国际化设置： 123456&gt; #设置语言&gt; LANGUAGE_CODE = &apos;zh-hans&apos;&gt;&gt; #设置时区&gt; TIME_ZONE = &apos;Asia/Shanghai&apos;&gt;]]></content>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Firewalld]]></title>
    <url>%2Funcategorized%2Ffirewalld%2F</url>
    <content type="text"><![CDATA[firewalld使用简介1.firewalld简介firewalld是centos7的一大特性，最大的好处有两个：支持动态更新，不用重启服务；第二个就是加入了防火墙的“zone”概念.firewalld有图形界面和工具界面，由于我在服务器上使用，图形界面请参照官方文档，本文以字符界面做介绍firewalld的字符界面管理工具是: firewall-cmd .firewalld默认配置文件有两个：/usr/lib/firewalld/ （系统配置）和 /etc/firewalld/ （用户配置地址）. 2.firewalld安装root执行 1$ yum install firewalld firewall-config 3.运行/停止/禁用 firewalld启动： 1# systemctl start firewalld 查看状态： 1# systemctl status firewalld 1# firewall-cmd --state 停止： 1# systemctl disable firewalld 禁用： 1# systemctl stop firewalld 4.配置firewalld查看版本： 1# firewall-cmd --version 查看帮助： 1# firewall-cmd --help 显示状态： 1# firewall-cmd --state 更新防火墙规则： 12# firewall-cmd --reload# firewall-cmd --complete-reload 两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务 将接口添加到区域，默认接口都在public 1# firewall-cmd --zone=public --add-interface=eth0 永久生效再加上 –permanent 然后reload防火墙 设置默认接口区域 1# firewall-cmd --set-default-zone=public 立即生效无需重启 打开端口（貌似这个才最常用） 查看所有打开的端口： 1# firewall-cmd --zone=dmz --list-ports 加入一个端口到区域： 1# firewall-cmd --zone=dmz --add-port=8080/tcp 若要永久生效方法同上 打开一个服务，类似于将端口可视化，服务需要在配置文件中添加，/etc/firewalld 目录下有services文件夹 1# firewall-cmd --zone=work --add-service=smtp 移除服务 1# firewall-cmd --zone=work --remove-service=smtp]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
